package worlde;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class Wordle {

public static ArrayList<String> ordel(String word, ArrayList<Character> allowed, ArrayList<Character> required, ArrayList<Integer> indices) {
		
		for (int i = 0; i < required.size(); i++) {
			if (!allowed.contains(required.get(i)))
				allowed.add(required.get(i));
		}
		for(int i = 0; i<word.length(); i++) {

		      // access each character
		      char a = word.charAt(i);
		      if (!allowed.contains(a) && Character.isLetter(a))
		    	  allowed.add(a);
		    }
		
		ArrayList<String> res = new ArrayList<String>();
		int empty = 0;
		for (int i = 0; i < word.length(); i++) {
			if (word.charAt(i) == ' ')
				empty++;
		}
		System.out.println(empty + " empty");
		
		int possibilites = (int) Math.pow(allowed.size(), empty);
		System.out.println(possibilites + " possibilities");
		
		ArrayList<String> allStrings = ordel2(word, allowed);
		
		int generated = 0;
		for (int i = 0; i < allStrings.size(); i++) {
			generated++;
			String s = allStrings.get(i);
			
			
			if (required.size() < 1) {
				if (!res.contains(s))
					res.add(s);
				}
			else 
			{
				boolean containsKeyLetters = true;
				for (int j = 0; j < required.size(); j++) {
					int ind = s.indexOf(required.get(j));
					if (ind == -1)
						containsKeyLetters = false;
				}
				
				//MainFunc.rawPrint("compare " + s.charAt(indices.get(0)) + required.get(0));
				if (s.charAt(indices.get(0)) == required.get(0)) 
					containsKeyLetters = false;
				
				
				if (required.size() > 1) {
					//MainFunc.rawPrint("compare " + s.charAt(indices.get(1)) + required.get(1));
					if (s.charAt(indices.get(1)) == required.get(1))
						containsKeyLetters = false;
				}
				
				if (required.size() > 2) {
					//MainFunc.rawPrint("compare " + s.charAt(indices.get(2)) + required.get(2));
					if (s.charAt(indices.get(2)) == required.get(2))
						containsKeyLetters = false;
				}
				
				if (required.size() > 3) {
					if (s.charAt(indices.get(3)) == required.get(3))
						containsKeyLetters = false;
				}
				if (required.size() > 4) {
					if (s.charAt(indices.get(4)) == required.get(4))
						containsKeyLetters = false;
				}
				if (required.size() > 5) {
					if (s.charAt(indices.get(5)) == required.get(5))
						containsKeyLetters = false;
				}
				if (required.size() > 6) {
					if (s.charAt(indices.get(6)) == required.get(6))
						containsKeyLetters = false;
				}
				if (required.size() > 7) {
					if (s.charAt(indices.get(7)) == required.get(7))
						containsKeyLetters = false;
				}
				
				
				if (containsKeyLetters) {
					if (!res.contains(s))
						res.add(s);
				}
			}
			
			
					
			
		}
		
		
		
		System.out.println("current word: " + word);
		System.out.println("allowed : " + allowed);
		System.out.println("required : " + required);
		System.out.println("generated " + generated + ", " + res.size() + " viable ones");		
		
		
		
		
		return res;
	
	}
public static ArrayList<String> ordel2(String word, ArrayList<Character> allowed) {
	ArrayList<String> res = new ArrayList<String>();
	ArrayList<String> res2  = new ArrayList<String>();
	int letters = allowed.size();
	
	//int ind = s.indexOf(" ");
	//&& res.get(i).indexOf(" ") != -1
	
	for (int i = 0; i < allowed.size(); i++) {
		String s = word.replaceFirst(" ", allowed.get(i).toString());
		res.add(s);
	}
	if (noSpace(res))
		return res;
	for (int i = 0; i < res.size(); i++) {
		for (int j = 0; j < letters; j++) {
			String s = res.get(i).replaceFirst(" ", allowed.get(j).toString());
			res2.add(s);
		}
	}
	if (noSpace(res2))
		return res2;
	res.clear();
	for (int i = 0; i < res2.size(); i++) {
		for (int j = 0; j < letters; j++) {
			String s = res2.get(i).replaceFirst(" ", allowed.get(j).toString());
			res.add(s);
		}
	}
	if (noSpace(res))
		return res;
	res2.clear();
		for (int i = 0; i < res.size(); i++) {
			for (int j = 0; j < letters; j++) {
				String s = res.get(i).replaceFirst(" ", allowed.get(j).toString());
				res2.add(s);
		}
	}
	if (noSpace(res2))
		return res2;
	res.clear();
	for (int i = 0; i < res2.size() && res2.get(i).indexOf(" ") != -1; i++) {
		for (int j = 0; j < letters; j++) {
			String s = res2.get(i).replaceFirst(" ", allowed.get(j).toString());
			res.add(s);
		}
	}
	return res;
	}
	private static boolean noSpace(ArrayList<String> l) {
		return l.get(0).indexOf(" ") == -1;
	}
}
